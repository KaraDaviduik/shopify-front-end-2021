{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/karadaviduik/shopify-front-end-2021/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\"; // import Movie from \"./Movie\";\n// import Search from \"./Search\";\n\nconst APIKey = \"3b047afd\"; // var JSON = '{\"Title\":\"Batman\",\"Year\":\"1989\",\"Rated\":\"PG-13\",\"Released\":\"23 Jun 1989\",\"Runtime\":\"126 min\",\"Genre\":\"Action, Adventure\",\"Director\":\"Tim Burton\",\"Writer\":\"Bob Kane (Batman characters), Sam Hamm (story), Sam Hamm (screenplay), Warren Skaaren (screenplay)\",\"Actors\":\"Michael Keaton, Jack Nicholson, Kim Basinger, Robert Wuhl\",\"Plot\":\"The Dark Knight of Gotham City begins his war on crime with his first major enemy being Jack Napier, a criminal who becomes the clownishly homicidal Joker.\",\"Language\":\"English, French, Spanish\",\"Country\":\"USA, UK\",\"Awards\":\"Won 1 Oscar. Another 7 wins & 26 nominations.\",\"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTYwNjAyODIyMF5BMl5BanBnXkFtZTYwNDMwMDk2._V1_SX300.jpg\",\"Ratings\":[{\"Source\":\"Internet Movie Database\",\"Value\":\"7.5/10\"},{\"Source\":\"Rotten Tomatoes\",\"Value\":\"71%\"},{\"Source\":\"Metacritic\",\"Value\":\"69/100\"}],\"Metascore\":\"69\",\"imdbRating\":\"7.5\",\"imdbVotes\":\"337,623\",\"imdbID\":\"tt0096895\",\"Type\":\"movie\",\"DVD\":\"N/A\",\"BoxOffice\":\"$251,348,343\",\"Production\":\"Warner Brothers, PolyGram Filmed Entertainment, Guber-Peters Company\",\"Website\":\"N/A\",\"Response\":\"True\"}';\n// var batman = JSON.parse(JSON); \n// var batman = \"batman\";\n// const arr = [{ batman }];\n\nconst arr = [\"batman\", \"spiderman\", \"test\"]; // const movieList = arr.map((val) => (<li><Movie movie={val} /></li>));\n\nconst Movie = ({\n  movie\n}) => {\n  return (\n    /*#__PURE__*/\n    // <li></li>\n    _jsxDEV(\"div\", {\n      className: \"Movie\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [movie.Title, \" (\", movie.Year, \") \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Nominate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) // movieResults.movie = 'false';\n\n  );\n}; // array nominations list, array of {movie}s\n// display nominations list\n// button onClick calls nominate function\n// nominate: checks if movie is already in array, if not then display it\n\n\n_c = Movie;\n\nfunction MyList(props) {\n  const arr = props.data;\n  const listItems = arr.map((val, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Movie, {\n      movie: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 43\n    }, this)\n  }, JSON.stringify(val.Title), false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = MyList;\n\nconst App = () => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [APIQuery, setAPIQuery] = useState(\"\");\n  const [movieResults, setMovieResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); // const [loading, setLoading] = useState(false);\n\n  function updateSearchQuery(e) {\n    setSearchQuery(e.target.value);\n  } // const updateSearchQuery = (e) => {\n  //     setSearchQuery(e.target.value);\n  // }\n  // }\n  // useEffect(() => {\n  //     // setLoading(true);\n  //     // setMovieResults([]);\n  //     // window.alert(\"TEST\");\n  //     fetch(`http://www.omdbapi.com/?s=${searchQuery}&apikey=${APIKey}`)\n  //         .then(response => response.json())\n  //         .then(data => {\n  //             // window.alert(\"TEST\");\n  //             setMovieResults(data.Search);\n  //             window.alert({movieResults});\n  //             // console.log(movieResults);\n  //         })\n  //     // setLoading(false);\n  // }, [searchQuery]);\n\n\n  const clearInput = () => {\n    setSearchQuery(\"\");\n  };\n\n  const callSearch = e => {\n    // window.alert(\"callSearch\");\n    e.preventDefault();\n    search(searchQuery);\n    setAPIQuery(searchQuery);\n    clearInput();\n  };\n\n  const search = searchQuery => {\n    // window.alert(\"Searching\");\n    setMovieResults([]);\n    setLoading(true);\n    setError(null);\n    fetch(`http://www.omdbapi.com/?s=${searchQuery}&apikey=3b047afd`).then(resp => resp.json()).then(response => {\n      // window.alert(`Response: ${response}`);\n      if (response.Response === \"True\") {\n        // window.alert(`API: ${searchQuery}, response: ${response.Search}`);\n        // window.alert(\"TEST\");\n        setMovieResults(response.Search); // var x = JSON.stringify(movieResults);\n        // var x = JSON.stringify(movieResults[1].Title);\n        // window.alert(`Result: ${x}`);\n\n        setLoading(false);\n      } else {\n        // window.alert(\"ERROR\");\n        setError(response.Error);\n        setLoading(false);\n      } // window.alert({movieResults});\n      // var json = JSON.parse(movieResults);\n      // window.alert(JSON.stringify(json));\n      // console.log(movieResults);\n\n    });\n  }; // const movieTitle = \"batman\";\n  // const movieYear = \"1999\";\n  // const movie = (<p>{movieTitle} ({movieYear}) <button>Nominate</button></p>);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Shoppies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Movie Titles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"search\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: callSearch,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"searchTerm\",\n                value: searchQuery,\n                onChange: updateSearchQuery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                class: \"searchButton\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Results for \\\"\", APIQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyList, {\n          data: movieResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Nominations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Some text..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this) //         {/* <div className=\"Results\">\n  //             <h1>Results</h1>\n  //             <ul>\n  //                 {movieList}\n  // { \n  //                 <li>\n  //                 {movie}\n  //                 </li> }\n  //             </ul>\n  //         </div> */\n  //     </div>\n  ;\n};\n\n_s(App, \"HJTR/hYwzicLWVqRxJLgRrLhfek=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Movie\");\n$RefreshReg$(_c2, \"MyList\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/karadaviduik/shopify-front-end-2021/src/components/App.js"],"names":["React","useState","useEffect","APIKey","arr","Movie","movie","Title","Year","MyList","props","data","listItems","map","val","index","JSON","stringify","App","searchQuery","setSearchQuery","APIQuery","setAPIQuery","movieResults","setMovieResults","loading","setLoading","error","setError","updateSearchQuery","e","target","value","clearInput","callSearch","preventDefault","search","fetch","then","resp","json","response","Response","Search","Error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n// import Movie from \"./Movie\";\n// import Search from \"./Search\";\n\nconst APIKey = \"3b047afd\";\n\n\n\n\n\n\n// var JSON = '{\"Title\":\"Batman\",\"Year\":\"1989\",\"Rated\":\"PG-13\",\"Released\":\"23 Jun 1989\",\"Runtime\":\"126 min\",\"Genre\":\"Action, Adventure\",\"Director\":\"Tim Burton\",\"Writer\":\"Bob Kane (Batman characters), Sam Hamm (story), Sam Hamm (screenplay), Warren Skaaren (screenplay)\",\"Actors\":\"Michael Keaton, Jack Nicholson, Kim Basinger, Robert Wuhl\",\"Plot\":\"The Dark Knight of Gotham City begins his war on crime with his first major enemy being Jack Napier, a criminal who becomes the clownishly homicidal Joker.\",\"Language\":\"English, French, Spanish\",\"Country\":\"USA, UK\",\"Awards\":\"Won 1 Oscar. Another 7 wins & 26 nominations.\",\"Poster\":\"https://m.media-amazon.com/images/M/MV5BMTYwNjAyODIyMF5BMl5BanBnXkFtZTYwNDMwMDk2._V1_SX300.jpg\",\"Ratings\":[{\"Source\":\"Internet Movie Database\",\"Value\":\"7.5/10\"},{\"Source\":\"Rotten Tomatoes\",\"Value\":\"71%\"},{\"Source\":\"Metacritic\",\"Value\":\"69/100\"}],\"Metascore\":\"69\",\"imdbRating\":\"7.5\",\"imdbVotes\":\"337,623\",\"imdbID\":\"tt0096895\",\"Type\":\"movie\",\"DVD\":\"N/A\",\"BoxOffice\":\"$251,348,343\",\"Production\":\"Warner Brothers, PolyGram Filmed Entertainment, Guber-Peters Company\",\"Website\":\"N/A\",\"Response\":\"True\"}';\n// var batman = JSON.parse(JSON); \n// var batman = \"batman\";\n// const arr = [{ batman }];\n\nconst arr = [\"batman\", \"spiderman\", \"test\"];\n\n// const movieList = arr.map((val) => (<li><Movie movie={val} /></li>));\n\n\n\nconst Movie = ({ movie }) => {\n    return (\n        // <li></li>\n        <div className=\"Movie\">\n            <p>{movie.Title} ({movie.Year}) <button>Nominate</button></p>\n        </div>\n        // movieResults.movie = 'false';\n    )\n}\n\n// array nominations list, array of {movie}s\n// display nominations list\n// button onClick calls nominate function\n// nominate: checks if movie is already in array, if not then display it\n\n\n\n\nfunction MyList(props) {\n    const arr = props.data;\n    const listItems = arr.map((val, index) =>\n      <li key={JSON.stringify(val.Title)}><Movie movie={val}/></li>\n    );\n    return <ul>{listItems}</ul>;\n  }\n\n\n\n\nconst App = () => {\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [APIQuery, setAPIQuery] = useState(\"\");\n    const [movieResults, setMovieResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    // const [loading, setLoading] = useState(false);\n\n\n    function updateSearchQuery(e) {\n        setSearchQuery(e.target.value);\n    }\n    // const updateSearchQuery = (e) => {\n    //     setSearchQuery(e.target.value);\n    // }\n\n    \n\n\n    // }\n    // useEffect(() => {\n    //     // setLoading(true);\n    //     // setMovieResults([]);\n    //     // window.alert(\"TEST\");\n    //     fetch(`http://www.omdbapi.com/?s=${searchQuery}&apikey=${APIKey}`)\n    //         .then(response => response.json())\n    //         .then(data => {\n    //             // window.alert(\"TEST\");\n    //             setMovieResults(data.Search);\n\n    //             window.alert({movieResults});\n\n    //             // console.log(movieResults);\n    //         })\n    //     // setLoading(false);\n\n    // }, [searchQuery]);\n\n    const clearInput = () => {\n        setSearchQuery(\"\");\n\n    }\n    const callSearch = (e) => {\n        // window.alert(\"callSearch\");\n        e.preventDefault();\n        search(searchQuery);\n        setAPIQuery(searchQuery);\n        clearInput();\n\n    }\n\n    const search = searchQuery => {\n        // window.alert(\"Searching\");\n        setMovieResults([]);\n        setLoading(true);\n        setError(null);\n        fetch(`http://www.omdbapi.com/?s=${searchQuery}&apikey=3b047afd`)\n        .then(resp => resp.json())\n        .then(response => {\n            // window.alert(`Response: ${response}`);\n            if (response.Response === \"True\") {\n                // window.alert(`API: ${searchQuery}, response: ${response.Search}`);\n                // window.alert(\"TEST\");\n                setMovieResults(response.Search);\n                // var x = JSON.stringify(movieResults);\n                // var x = JSON.stringify(movieResults[1].Title);\n                \n                // window.alert(`Result: ${x}`);\n                setLoading(false);\n            } else {\n                // window.alert(\"ERROR\");\n                setError(response.Error);\n                setLoading(false);\n            }\n            \n            // window.alert({movieResults});\n            // var json = JSON.parse(movieResults);\n            // window.alert(JSON.stringify(json));\n\n            // console.log(movieResults);\n        })\n    }\n\n    // const movieTitle = \"batman\";\n    // const movieYear = \"1999\";\n\n    // const movie = (<p>{movieTitle} ({movieYear}) <button>Nominate</button></p>);\n\n\n\n    return (\n        <div className=\"App\">\n            <h1>The Shoppies</h1>\n            <div class=\"row\">\n                <div class=\"column\">\n                    <h2>Search Movie Titles</h2>\n                    <div class=\"wrap\">\n                        <div class=\"search\">\n                            <form onSubmit={callSearch}>\n                                <input type=\"text\" class=\"searchTerm\" value={searchQuery} onChange={updateSearchQuery}/>\n                                <input type=\"submit\" class=\"searchButton\" />\n                                {/* <button type=\"submit\" >\n                                    <i class=\"fa fa-search\"></i>\n                                </button> */}\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"column\">\n                    <h2>Results for \"{APIQuery}\"</h2>\n                    \n                    <MyList data={movieResults} />\n                    \n\n\n                    {/* <ul>\n                        movieResults.map((movie) => (\n                            <li><Movie movie={movie} /></li>\n                        ));\n\n                        {/* movieResults.map((movie) => (\n                        <li>{movie.Title} ({movie.Year}) <button>Nominate</button></li>)); */}\n                    {/* </ul>  */}\n\n                    {/* <p>Some text..</p> */}\n\n                </div>\n\n\n                <div class=\"column\">\n                    <h2>Nominations</h2>\n                    <p>Some text..</p>\n                </div>\n\n            </div>\n\n        </div>\n        //         {/* <div className=\"Results\">\n        //             <h1>Results</h1>\n        //             <ul>\n        //                 {movieList}\n        // { \n        //                 <li>\n        //                 {movie}\n        //                 </li> }\n\n        //             </ul>\n\n        //         </div> */\n\n        //     </div>\n\n    );\n};\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}