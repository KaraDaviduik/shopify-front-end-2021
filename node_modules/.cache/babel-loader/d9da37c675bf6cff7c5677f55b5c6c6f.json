{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/karadaviduik/shopify-front-end-2021/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\"; // import Movie from \"./Movie\";\n// import Search from \"./Search\";\n\nconst APIKey = \"3b047afd\"; // const movieList = arr.map((val) => (<li><Movie movie={val} /></li>));\n// array nominations list, array of {movie}s\n// display nominations list\n// button onClick calls nominate function\n// nominate: checks if movie is already in array, if not then display it\n\nconst App = () => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [APIQuery, setAPIQuery] = useState(\"\");\n  const [movieResults, setMovieResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [nominees, setNominees] = useState([]);\n\n  function updateSearchQuery(e) {\n    setSearchQuery(e.target.value);\n  }\n\n  const DisplayBanner = () => {\n    if (nominees.length >= 5) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"banner\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"banner-content\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Movie nomination complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const RemoveNomination = ({\n    movie\n  }) => {\n    // window.alert(JSON.stringify(nominees[0].movie.Title));\n    // window.alert(JSON.stringify({movie}.movie.Title));\n    // window.alert(JSON.stringify(nominees.filter((nominee) => nominee.movie.Title === {movie}.movie.Title)));\n    setNominees(nominees.filter(nominee => nominee.movie.Title !== {\n      movie\n    }.movie.Title));\n    movie.Nominated = \"false\";\n  };\n\n  const NominateMovie = ({\n    movie\n  }) => {\n    // window.alert(`nominate: ${movie}`);\n    if (nominees.length < 5) {\n      setNominees(nominees => nominees.concat({\n        movie\n      }));\n      movie.Nominated = \"true\";\n    }\n  };\n\n  const CheckIfNominated = ({\n    movie\n  }) => {\n    // value={searchQuery} onChange={updateSearchQuery}\n    if ({\n      movie\n    }.movie.Nominated === \"false\") {\n      // window.alert(JSON.stringify({movie}.movie));\n      NominateMovie({\n        movie\n      }); // <NominateMovie movie={movie} />\n      // NominateMovie({movie});\n    } else {// window.alert(JSON.stringify({movie}.movie));\n      }\n\n    {\n      /* console.log({movie}); */\n    } // <NominateMovie movie={movie} />\n  };\n\n  const Movie = ({\n    movie\n  }) => {\n    //  window.alert(JSON.stringify(Object.keys({movie}.movie)));\n    if (!{\n      movie\n    }.movie.hasOwnProperty(\"Nominated\")) {\n      movie.Nominated = \"false\"; // window.alert(`FOUND: ${JSON.stringify({movie})}`);\n      // if ({movie}.movie.Nominated) {\n      // }\n    }\n\n    if (nominees.some(nominee => nominee.movie.Title === {\n      movie\n    }.movie.Title)) {\n      movie.Nominated = \"true\";\n    }\n\n    return (\n      /*#__PURE__*/\n      // <li></li>\n      _jsxDEV(\"div\", {\n        className: \"Movie\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [movie.Title, \" (\", movie.Year, \") \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => CheckIfNominated({\n              movie\n            }),\n            children: \"Nominate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this) // movieResults.movie = 'false';\n\n    );\n  };\n\n  const NominatedMovie = ({\n    movie\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Movie\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [movie.Title, \" (\", movie.Year, \") \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => RemoveNomination({\n            movie\n          }),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  };\n\n  function NominationList(props) {\n    // window.alert(JSON.stringify({nominees}));\n    const arr = props.data; // window.alert(`LIST: ${props}`);\n\n    const listItems = arr.map((val, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(NominatedMovie, {\n        movie: val.movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 55\n      }, this)\n    }, JSON.stringify(val.movie.Title), false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 16\n    }, this);\n  }\n\n  function MyList(props) {\n    const arr = props.data;\n    const listItems = arr.map((val, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Movie, {\n        movie: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 49\n      }, this)\n    }, JSON.stringify(val.Title), false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  }\n\n  const clearInput = () => {\n    setSearchQuery(\"\");\n  };\n\n  const callSearch = e => {\n    // window.alert(\"callSearch\");\n    e.preventDefault();\n    search(searchQuery);\n    setAPIQuery(searchQuery);\n    clearInput();\n  };\n\n  const search = searchQuery => {\n    // window.alert(\"Searching\");\n    setMovieResults([]);\n    setLoading(true);\n    setError(null);\n    fetch(`http://www.omdbapi.com/?s=${searchQuery}&apikey=3b047afd`).then(resp => resp.json()).then(response => {\n      // window.alert(`Response: ${response}`);\n      if (response.Response === \"True\") {\n        // window.alert(`API: ${searchQuery}, response: ${response.Search}`);\n        // window.alert(\"TEST\");\n        setMovieResults(response.Search); // var x = JSON.stringify(movieResults);\n        // var x = JSON.stringify(movieResults[1].Title);\n        // window.alert(`Result: ${x}`);\n\n        setLoading(false);\n      } else {\n        // window.alert(\"ERROR\");\n        setError(response.Error);\n        setLoading(false);\n      } // window.alert({movieResults});\n      // var json = JSON.parse(movieResults);\n      // window.alert(JSON.stringify(json));\n      // console.log(movieResults);\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"The Shoppies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Movie Titles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"search\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: callSearch,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: searchQuery,\n                onChange: updateSearchQuery\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Results for \\\"\", APIQuery, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyList, {\n          data: movieResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Nominations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NominationList, {\n          data: nominees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DisplayBanner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"vZxqP0jXwoR1dFly+3/lZi6QvGw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karadaviduik/shopify-front-end-2021/src/components/App.js"],"names":["React","useState","useEffect","APIKey","App","searchQuery","setSearchQuery","APIQuery","setAPIQuery","movieResults","setMovieResults","loading","setLoading","error","setError","nominees","setNominees","updateSearchQuery","e","target","value","DisplayBanner","length","RemoveNomination","movie","filter","nominee","Title","Nominated","NominateMovie","concat","CheckIfNominated","Movie","hasOwnProperty","some","Year","NominatedMovie","NominationList","props","arr","data","listItems","map","val","index","JSON","stringify","MyList","clearInput","callSearch","preventDefault","search","fetch","then","resp","json","response","Response","Search","Error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP,C,CACA;AACA;;AAEA,MAAMC,MAAM,GAAG,UAAf,C,CAKA;AAQA;AACA;AACA;AACA;;AAWA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AAGA,WAASgB,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1BZ,IAAAA,cAAc,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;;AAED,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIN,QAAQ,CAACO,MAAT,IAAmB,CAAvB,EAA0B;AACtB,0BACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACI;AAAK,UAAA,KAAK,EAAC,gBAAX;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXD,MAYK;AACD,0BACI;AAAK,QAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AAEJ,GArBD;;AAuBA,QAAMC,gBAAgB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AACpC;AACA;AACA;AACAR,IAAAA,WAAW,CAACD,QAAQ,CAACU,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACF,KAAR,CAAcG,KAAd,KAAwB;AAAEH,MAAAA;AAAF,MAAUA,KAAV,CAAgBG,KAArE,CAAD,CAAX;AACAH,IAAAA,KAAK,CAACI,SAAN,GAAkB,OAAlB;AAEH,GAPD;;AASA,QAAMC,aAAa,GAAG,CAAC;AAAEL,IAAAA;AAAF,GAAD,KAAe;AACjC;AACA,QAAIT,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;AACrBN,MAAAA,WAAW,CAACD,QAAQ,IAAIA,QAAQ,CAACe,MAAT,CAAgB;AAAEN,QAAAA;AAAF,OAAhB,CAAb,CAAX;AACAA,MAAAA,KAAK,CAACI,SAAN,GAAkB,MAAlB;AACH;AAGJ,GARD;;AAUA,QAAMG,gBAAgB,GAAG,CAAC;AAAEP,IAAAA;AAAF,GAAD,KAAe;AACpC;AACA,QAAK;AAAEA,MAAAA;AAAF,MAAUA,KAAV,CAAgBI,SAAjB,KAAgC,OAApC,EAA6C;AAGzC;AACAC,MAAAA,aAAa,CAAC;AAAEL,QAAAA;AAAF,OAAD,CAAb,CAJyC,CAKzC;AACA;AACH,KAPD,MAQK,CACD;AACH;;AACD;AAAC;AAA6B,KAbM,CAcpC;AAGH,GAjBD;;AAmBA,QAAMQ,KAAK,GAAG,CAAC;AAAER,IAAAA;AAAF,GAAD,KAAe;AACzB;AACA,QAAI,CAAE;AAAEA,MAAAA;AAAF,MAAUA,KAAX,CAAkBS,cAAlB,CAAiC,WAAjC,CAAL,EAAoD;AAChDT,MAAAA,KAAK,CAACI,SAAN,GAAkB,OAAlB,CADgD,CAEhD;AACA;AACA;AACH;;AACD,QAAGb,QAAQ,CAACmB,IAAT,CAAeR,OAAD,IAAaA,OAAO,CAACF,KAAR,CAAcG,KAAd,KAAwB;AAAEH,MAAAA;AAAF,MAAUA,KAAV,CAAgBG,KAAnE,CAAH,EAA8E;AAC1EH,MAAAA,KAAK,CAACI,SAAN,GAAgB,MAAhB;AACH;;AAKD;AAAA;AACI;AACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAA,qBAAIJ,KAAK,CAACG,KAAV,QAAmBH,KAAK,CAACW,IAAzB,qBAAgC;AAAQ,YAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAAC;AAAEP,cAAAA;AAAF,aAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,CAKI;;AALJ;AAOH,GAtBD;;AAwBA,QAAMY,cAAc,GAAG,CAAC;AAAEZ,IAAAA;AAAF,GAAD,KAAe;AAClC,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA,mBAAIA,KAAK,CAACG,KAAV,QAAmBH,KAAK,CAACW,IAAzB,qBAAgC;AAAQ,UAAA,OAAO,EAAE,MAAMZ,gBAAgB,CAAC;AAAEC,YAAAA;AAAF,WAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AASA,WAASa,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B;AACA,UAAMC,GAAG,GAAGD,KAAK,CAACE,IAAlB,CAF2B,CAG3B;;AACA,UAAMC,SAAS,GAAGF,GAAG,CAACG,GAAJ,CAAQ,CAACC,GAAD,EAAMC,KAAN,kBACtB;AAAA,6BAA0C,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAED,GAAG,CAACnB;AAA3B;AAAA;AAAA;AAAA;AAAA;AAA1C,OAASqB,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACnB,KAAJ,CAAUG,KAAzB,CAAT;AAAA;AAAA;AAAA;AAAA,YADc,CAAlB;AAIA,wBAAO;AAAA,gBAAKc;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,WAASM,MAAT,CAAgBT,KAAhB,EAAuB;AACnB,UAAMC,GAAG,GAAGD,KAAK,CAACE,IAAlB;AACA,UAAMC,SAAS,GAAGF,GAAG,CAACG,GAAJ,CAAQ,CAACC,GAAD,EAAMC,KAAN,kBACtB;AAAA,6BAAoC,QAAC,KAAD;AAAO,QAAA,KAAK,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA;AAApC,OAASE,IAAI,CAACC,SAAL,CAAeH,GAAG,CAAChB,KAAnB,CAAT;AAAA;AAAA;AAAA;AAAA,YADc,CAAlB;AAGA,wBAAO;AAAA,gBAAKc;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAMO,UAAU,GAAG,MAAM;AACrB1C,IAAAA,cAAc,CAAC,EAAD,CAAd;AAEH,GAHD;;AAIA,QAAM2C,UAAU,GAAI/B,CAAD,IAAO;AACtB;AACAA,IAAAA,CAAC,CAACgC,cAAF;AACAC,IAAAA,MAAM,CAAC9C,WAAD,CAAN;AACAG,IAAAA,WAAW,CAACH,WAAD,CAAX;AACA2C,IAAAA,UAAU;AAEb,GAPD;;AASA,QAAMG,MAAM,GAAG9C,WAAW,IAAI;AAC1B;AACAK,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAsC,IAAAA,KAAK,CAAE,6BAA4B/C,WAAY,kBAA1C,CAAL,CACKgD,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,QAAQ,IAAI;AACd;AACA,UAAIA,QAAQ,CAACC,QAAT,KAAsB,MAA1B,EAAkC;AAC9B;AACA;AACA/C,QAAAA,eAAe,CAAC8C,QAAQ,CAACE,MAAV,CAAf,CAH8B,CAI9B;AACA;AAEA;;AACA9C,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OATD,MASO;AACH;AACAE,QAAAA,QAAQ,CAAC0C,QAAQ,CAACG,KAAV,CAAR;AACA/C,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAfa,CAiBd;AACA;AACA;AAEA;;AACH,KAxBL;AAyBH,GA9BD;;AAkCA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,iCACI;AAAK,YAAA,KAAK,EAAC,QAAX;AAAA,mCACI;AAAM,cAAA,QAAQ,EAAEqC,UAAhB;AAAA,sCACI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAE5C,WAA1B;AAAuC,gBAAA,QAAQ,EAAEY;AAAjD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAoBI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,gCACI;AAAA,uCAAkBV,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH,CAvND;;GAAMX,G;;KAAAA,G;AA6NN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n// import Movie from \"./Movie\";\n// import Search from \"./Search\";\n\nconst APIKey = \"3b047afd\";\n\n\n\n\n// const movieList = arr.map((val) => (<li><Movie movie={val} /></li>));\n\n\n\n\n\n\n\n// array nominations list, array of {movie}s\n// display nominations list\n// button onClick calls nominate function\n// nominate: checks if movie is already in array, if not then display it\n\n\n\n\n\n\n\n\n\n\nconst App = () => {\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [APIQuery, setAPIQuery] = useState(\"\");\n    const [movieResults, setMovieResults] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [nominees, setNominees] = useState([]);\n\n\n    function updateSearchQuery(e) {\n        setSearchQuery(e.target.value);\n    }\n\n    const DisplayBanner = () => {\n        if (nominees.length >= 5) {\n            return (\n                <div class=\"banner\">\n                    <div class=\"banner-content\">\n                        <h1>\n                            Movie nomination complete!\n                        </h1>\n                    </div>\n                </div>\n\n            )\n        }\n        else {\n            return (\n                <div class=\"empty\">\n\n                </div>\n            )\n        }\n\n    }\n\n    const RemoveNomination = ({ movie }) => {\n        // window.alert(JSON.stringify(nominees[0].movie.Title));\n        // window.alert(JSON.stringify({movie}.movie.Title));\n        // window.alert(JSON.stringify(nominees.filter((nominee) => nominee.movie.Title === {movie}.movie.Title)));\n        setNominees(nominees.filter((nominee) => nominee.movie.Title !== { movie }.movie.Title));\n        movie.Nominated = \"false\";\n\n    }\n\n    const NominateMovie = ({ movie }) => {\n        // window.alert(`nominate: ${movie}`);\n        if (nominees.length < 5) {\n            setNominees(nominees => nominees.concat({ movie }));\n            movie.Nominated = \"true\";\n        }\n\n\n    }\n\n    const CheckIfNominated = ({ movie }) => {\n        // value={searchQuery} onChange={updateSearchQuery}\n        if (({ movie }.movie.Nominated) === \"false\") {\n\n\n            // window.alert(JSON.stringify({movie}.movie));\n            NominateMovie({ movie });\n            // <NominateMovie movie={movie} />\n            // NominateMovie({movie});\n        }\n        else {\n            // window.alert(JSON.stringify({movie}.movie));\n        }\n        {/* console.log({movie}); */ }\n        // <NominateMovie movie={movie} />\n\n\n    }\n\n    const Movie = ({ movie }) => {\n        //  window.alert(JSON.stringify(Object.keys({movie}.movie)));\n        if (!({ movie }.movie).hasOwnProperty(\"Nominated\")) {\n            movie.Nominated = \"false\";\n            // window.alert(`FOUND: ${JSON.stringify({movie})}`);\n            // if ({movie}.movie.Nominated) {\n            // }\n        }\n        if(nominees.some((nominee) => nominee.movie.Title === { movie }.movie.Title)) {\n            movie.Nominated=\"true\";\n        }\n\n            \n\n\n        return (\n            // <li></li>\n            <div className=\"Movie\">\n                <p>{movie.Title} ({movie.Year}) <button onClick={() => CheckIfNominated({ movie })}>Nominate</button></p>\n            </div>\n            // movieResults.movie = 'false';\n        )\n    }\n\n    const NominatedMovie = ({ movie }) => {\n        return (\n            <div className=\"Movie\">\n                <p>{movie.Title} ({movie.Year}) <button onClick={() => RemoveNomination({ movie })}>Remove</button></p>\n            </div>\n        )\n    }\n\n\n    function NominationList(props) {\n        // window.alert(JSON.stringify({nominees}));\n        const arr = props.data;\n        // window.alert(`LIST: ${props}`);\n        const listItems = arr.map((val, index) =>\n            <li key={JSON.stringify(val.movie.Title)}><NominatedMovie movie={val.movie} /></li>\n        );\n\n        return <ul>{listItems}</ul>;\n    }\n    function MyList(props) {\n        const arr = props.data;\n        const listItems = arr.map((val, index) =>\n            <li key={JSON.stringify(val.Title)}><Movie movie={val} /></li>\n        );\n        return <ul>{listItems}</ul>;\n    }\n\n    const clearInput = () => {\n        setSearchQuery(\"\");\n\n    }\n    const callSearch = (e) => {\n        // window.alert(\"callSearch\");\n        e.preventDefault();\n        search(searchQuery);\n        setAPIQuery(searchQuery);\n        clearInput();\n\n    }\n\n    const search = searchQuery => {\n        // window.alert(\"Searching\");\n        setMovieResults([]);\n        setLoading(true);\n        setError(null);\n        fetch(`http://www.omdbapi.com/?s=${searchQuery}&apikey=3b047afd`)\n            .then(resp => resp.json())\n            .then(response => {\n                // window.alert(`Response: ${response}`);\n                if (response.Response === \"True\") {\n                    // window.alert(`API: ${searchQuery}, response: ${response.Search}`);\n                    // window.alert(\"TEST\");\n                    setMovieResults(response.Search);\n                    // var x = JSON.stringify(movieResults);\n                    // var x = JSON.stringify(movieResults[1].Title);\n\n                    // window.alert(`Result: ${x}`);\n                    setLoading(false);\n                } else {\n                    // window.alert(\"ERROR\");\n                    setError(response.Error);\n                    setLoading(false);\n                }\n\n                // window.alert({movieResults});\n                // var json = JSON.parse(movieResults);\n                // window.alert(JSON.stringify(json));\n\n                // console.log(movieResults);\n            })\n    }\n\n\n\n    return (\n        <div className=\"App\">\n            <h1>The Shoppies</h1>\n            <div class=\"row\">\n                <div class=\"column\">\n                    <h2>Search Movie Titles</h2>\n                    <div class=\"wrap\">\n                        <div class=\"search\">\n                            <form onSubmit={callSearch}>\n                                <input type=\"text\" value={searchQuery} onChange={updateSearchQuery} />\n                                <input type=\"submit\" />\n                                {/* <button type=\"submit\" >\n                                    <i class=\"fa fa-search\"></i>\n                                </button> */}\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"column\">\n                    <h2>Results for \"{APIQuery}\"</h2>\n\n                    <MyList data={movieResults} />\n\n                </div>\n\n\n                <div class=\"column\">\n                    <h2>Nominations</h2>\n                    <NominationList data={nominees} />\n                    <DisplayBanner />\n                </div>\n\n            </div>\n\n        </div>\n\n\n    );\n};\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}